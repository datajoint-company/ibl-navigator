server {
  listen 443 ssl;
  server_name {{SUBDOMAINS}}.{{URL}};

  ssl_certificate /etc/letsencrypt/live/{{SUBDOMAINS}}.{{URL}}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{SUBDOMAINS}}.{{URL}}/privkey.pem;

  # session settings
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;

  # protocols
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

  # OCSP Stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 127.0.0.11 valid=30s; # Docker DNS Server

  # Optional additional headers
  #add_header Content-Security-Policy "upgrade-insecure-requests";
  #add_header X-Frame-Options "SAMEORIGIN" always;
  #add_header X-XSS-Protection "1; mode=block" always;
  #add_header X-Content-Type-Options "nosniff" always;
  #add_header X-UA-Compatible "IE=Edge" always;
  #add_header Cache-Control "no-transform" always;
  #add_header Referrer-Policy "same-origin" always;

  ###
  #include /config/nginx/ssl.conf;

  location / {
    proxy_pass {{FRONTEND_SERVER}};
  }

  location /login {
    proxy_pass {{NODE_SERVER}};
  }
  
  location /api/ {
    proxy_pass {{NODE_SERVER}}/;
  }
  
}
